/*xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*/
/*x---------------------------------------------------------------------------------------------------x*/
/*x------------------------------------------- FUNCTIONS ---------------------------------------------x*/
/*x---------------------------------------------------------------------------------------------------x*/
/*xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*/



/*-----------------------------------------------------------------------------------------------------*/
/*---------------------------------------- TOWN TYPE FUNCTION -----------------------------------------*/
/*-----------------------------------------------------------------------------------------------------*/

// Check for the town type
switch (FEAT_HOUSES, PARENT, func_town_type, population) {
		0 .. (param[1] - 1): return 1;
		param[1] .. (param[2] - 1): return 2;
		return 3;
}



/*-----------------------------------------------------------------------------------------------------*/
/*------------------------------------ HISTORICAL ERA FUNCTIONS ---------------------------------------*/
/*-----------------------------------------------------------------------------------------------------*/

// Return a number for each historical era
switch (FEAT_HOUSES, SELF, availability_years, current_year) {
		0    	 .. (param[4] - 1): return 1;
        param[4] ..           1919: return 2;
		1920 	 ..           1949: return 3;
		1950 	 ..           1979: return 4;
		1980 	 ..           2009: return 5;
		return 6;
}

// Determine which animation frame is to be used for each availability era
switch (FEAT_HOUSES, SELF, func_anim_frame, availability_years()) {
		1: 1; 2: 2; 3: 3; 4: 4; 5: 5; 6: 6; }
		


/*-----------------------------------------------------------------------------------------------------*/
/*----------------------------- FUNCTIONS FOR ROAD-AWARE HOUSE TYPES ----------------------------------*/
/*-----------------------------------------------------------------------------------------------------*/

// Detect the existence of road class tiles in the immediate vicinity of the house
// Define eight cases for the possible sprites of road-aware house types and return them as numbers
switch (FEAT_HOUSES, SELF, func_road_detect,
		((nearby_tile_class(-1, -1) == TILE_CLASS_ROAD) || (nearby_tile_class(-1, -1) == TILE_CLASS_STATION))*1 +	// N
		((nearby_tile_class(-1,  0) == TILE_CLASS_ROAD) || (nearby_tile_class(-1,  0) == TILE_CLASS_STATION))*2 +	// NE
		((nearby_tile_class(-1,  1) == TILE_CLASS_ROAD) || (nearby_tile_class(-1,  1) == TILE_CLASS_STATION))*4 +	// E
		((nearby_tile_class( 0,  1) == TILE_CLASS_ROAD) || (nearby_tile_class( 0,  1) == TILE_CLASS_STATION))*8 +	// SE
		((nearby_tile_class( 1,  1) == TILE_CLASS_ROAD) || (nearby_tile_class( 1,  1) == TILE_CLASS_STATION))*16 +	// S
		((nearby_tile_class( 1,  0) == TILE_CLASS_ROAD) || (nearby_tile_class( 1,  0) == TILE_CLASS_STATION))*32 +	// SW
		((nearby_tile_class( 1, -1) == TILE_CLASS_ROAD) || (nearby_tile_class( 1, -1) == TILE_CLASS_STATION))*64 +	// W
		((nearby_tile_class( 0, -1) == TILE_CLASS_ROAD) || (nearby_tile_class( 0, -1) == TILE_CLASS_STATION))*128 	// NW
		) {
		0:	 return 0;  // No road or station is around house tile
		131: return 1;	// N corner (no road present in W or E tile)
		199: return 1;  // N corner (road present in W and E tile)
		195: return 1;	// N corner (road present in W tile)
		135: return 1;	// N corner (road present in E tile)
		7:   return 2;	// NE block
		14:  return 3;	// E corner	(no road present in N or S tile)
		31:	 return 3;	// E corner (road present in N and S tile)
		15:  return 3;	// E corner (road present in N tile)
		30:	 return 3;  // E corner (road present in S tile)
		28:  return 4;	// SE block
		56:  return 5;	// S corner	(no road present in E or W tile)
		124: return 5;	// S corner (road present in E and W tile)
		60:  return 5;  // S corner (road present in E tile)
		120: return 5;  // S corner (road present in W tile)
		112: return 6;  // SW block
		224: return 7;	// W corner (no road present in S or N tile)
		241: return 7;  // W corner (road present in S and N tile)
		240: return 7;  // W corner (road present in S tile)
		225: return 7;  // W corner (road present in N tile)
		193: return 8;	// NW block
		return 9;
}

// Combine the output of the historical era and road detection functions
// Output every possible combination as an individual number
switch (FEAT_HOUSES, SELF, func_anim_road, (func_anim_frame()*10) + func_road_detect()) {
		10: 10; 11: 11; 12: 12; 13: 13; 14: 14; 15: 15; 16: 16; 17: 17; 18: 18; 19: 19;
		20: 20; 21: 21; 22: 22; 23: 23; 24: 24; 25: 25; 26: 26; 27: 27; 28: 28; 29: 29;
		30: 30; 31: 31; 32: 32; 33: 33; 34: 34; 35: 35; 36: 36; 37: 37; 38: 38; 39: 39;
		40: 40; 41: 41; 42: 42; 43: 43; 44: 44; 45: 45; 46: 46; 47: 47; 48: 48; 49: 49;
		50: 50; 51: 51; 52: 52; 53: 53; 54: 54; 55: 55; 56: 56; 57: 57; 58: 58; 59: 59;
		60: 60; 61: 61; 62: 62; 63: 63; 64: 64; 65: 65; 66: 66; 67: 67; 68: 68; 69: 69;	
}



/*-----------------------------------------------------------------------------------------------------*/
/*------------------------------- FUNCTIONS FOR OLD TOWN PROTECTION -----------------------------------*/
/*-----------------------------------------------------------------------------------------------------*/

// This switch chain is used for the protection callback
// Switch chain for generating an old town core typical for Central European towns

// Require a historic unique building (building_class 2) to be present within a radius of 3 tiles
switch (FEAT_HOUSES, SELF, func_old_town_2,
		nearby_tile_house_class(-1, -1) == 258 ||
		nearby_tile_house_class(-1,  0) == 258 ||
		nearby_tile_house_class(-1,  1) == 258 ||
		nearby_tile_house_class( 0,  1) == 258 ||
		nearby_tile_house_class( 1,  1) == 258 ||
		nearby_tile_house_class( 1,  0) == 258 ||
		nearby_tile_house_class( 1, -1) == 258 ||
		nearby_tile_house_class( 0, -1) == 258 ||
		nearby_tile_house_class(-2, -2) == 258 ||
		nearby_tile_house_class(-2, -1) == 258 ||
		nearby_tile_house_class(-2,  0) == 258 ||
		nearby_tile_house_class(-2,  1) == 258 ||
		nearby_tile_house_class(-2,  2) == 258 ||
		nearby_tile_house_class(-1,  2) == 258 ||
		nearby_tile_house_class( 0,  2) == 258 ||
		nearby_tile_house_class( 1,  2) == 258 ||
		nearby_tile_house_class( 2,  2) == 258 ||
		nearby_tile_house_class( 2,  1) == 258 ||
		nearby_tile_house_class( 2,  0) == 258 ||
		nearby_tile_house_class( 2, -1) == 258 ||
		nearby_tile_house_class( 2, -2) == 258 ||
		nearby_tile_house_class( 1, -2) == 258 ||
		nearby_tile_house_class( 0, -2) == 258 ||
		nearby_tile_house_class(-1, -2) == 258 ||
		nearby_tile_house_class(-3, -3) == 258 ||
		nearby_tile_house_class(-3, -2) == 258 ||
		nearby_tile_house_class(-3, -1) == 258 ||
		nearby_tile_house_class(-3,  0) == 258 ||
		nearby_tile_house_class(-3,  1) == 258 ||
		nearby_tile_house_class(-3,  2) == 258 ||
		nearby_tile_house_class(-3,  3) == 258 ||
		nearby_tile_house_class(-2,  3) == 258 ||
		nearby_tile_house_class(-1,  3) == 258 ||
		nearby_tile_house_class( 0,  3) == 258 ||
		nearby_tile_house_class( 1,  3) == 258 ||
		nearby_tile_house_class( 2,  3) == 258 ||
		nearby_tile_house_class( 3,  3) == 258 ||
		nearby_tile_house_class( 3,  2) == 258 ||
		nearby_tile_house_class( 3,  1) == 258 ||
		nearby_tile_house_class( 3,  0) == 258 ||
		nearby_tile_house_class( 3, -1) == 258 ||
		nearby_tile_house_class( 3, -2) == 258 ||
		nearby_tile_house_class( 3, -3) == 258 ||
		nearby_tile_house_class( 2, -3) == 258 ||
		nearby_tile_house_class( 1, -3) == 258 ||
		nearby_tile_house_class( 0, -3) == 258 ||
		nearby_tile_house_class(-1, -3) == 258 ||
		nearby_tile_house_class(-2, -3) == 258 
		) {
		1: return 1;
		return 0;
}

// Define protection to be limited to the time after era01
switch (FEAT_HOUSES, SELF, func_old_town, func_anim_frame() != 1) {
		0: return 0;
		func_old_town_2;
}



/*-----------------------------------------------------------------------------------------------------*/
/*--------------------------- FUNCTIONS FOR HISTORISTIC CITY RING PROTECTION  -------------------------*/
/*-----------------------------------------------------------------------------------------------------*/

// This switch chain is used for the protection callback
// Switch chain for generating a ring of historistic (late 19th century) city buildings typical for Central European towns

// Require an old town building (building_class 4) to be present within a radius of 3 tiles
switch (FEAT_HOUSES, SELF, func_hist_ring_2,
		nearby_tile_house_class(-1, -1) == 260 ||
		nearby_tile_house_class(-1,  0) == 260 ||
		nearby_tile_house_class(-1,  1) == 260 ||
		nearby_tile_house_class( 0,  1) == 260 ||
		nearby_tile_house_class( 1,  1) == 260 ||
		nearby_tile_house_class( 1,  0) == 260 ||
		nearby_tile_house_class( 1, -1) == 260 ||
		nearby_tile_house_class( 0, -1) == 260 ||
		nearby_tile_house_class(-2, -2) == 260 ||
		nearby_tile_house_class(-2, -1) == 260 ||
		nearby_tile_house_class(-2,  0) == 260 ||
		nearby_tile_house_class(-2,  1) == 260 ||
		nearby_tile_house_class(-2,  2) == 260 ||
		nearby_tile_house_class(-1,  2) == 260 ||
		nearby_tile_house_class( 0,  2) == 260 ||
		nearby_tile_house_class( 1,  2) == 260 ||
		nearby_tile_house_class( 2,  2) == 260 ||
		nearby_tile_house_class( 2,  1) == 260 ||
		nearby_tile_house_class( 2,  0) == 260 ||
		nearby_tile_house_class( 2, -1) == 260 ||
		nearby_tile_house_class( 2, -2) == 260 ||
		nearby_tile_house_class( 1, -2) == 260 ||
		nearby_tile_house_class( 0, -2) == 260 ||
		nearby_tile_house_class(-1, -2) == 260 ||
		nearby_tile_house_class(-3, -3) == 260 ||
		nearby_tile_house_class(-3, -2) == 260 ||
		nearby_tile_house_class(-3, -1) == 260 ||
		nearby_tile_house_class(-3,  0) == 260 ||
		nearby_tile_house_class(-3,  1) == 260 ||
		nearby_tile_house_class(-3,  2) == 260 ||
		nearby_tile_house_class(-3,  3) == 260 ||
		nearby_tile_house_class(-2,  3) == 260 ||
		nearby_tile_house_class(-1,  3) == 260 ||
		nearby_tile_house_class( 0,  3) == 260 ||
		nearby_tile_house_class( 1,  3) == 260 ||
		nearby_tile_house_class( 2,  3) == 260 ||
		nearby_tile_house_class( 3,  3) == 260 ||
		nearby_tile_house_class( 3,  2) == 260 ||
		nearby_tile_house_class( 3,  1) == 260 ||
		nearby_tile_house_class( 3,  0) == 260 ||
		nearby_tile_house_class( 3, -1) == 260 ||
		nearby_tile_house_class( 3, -2) == 260 ||
		nearby_tile_house_class( 3, -3) == 260 ||
		nearby_tile_house_class( 2, -3) == 260 ||
		nearby_tile_house_class( 1, -3) == 260 ||
		nearby_tile_house_class( 0, -3) == 260 ||
		nearby_tile_house_class(-1, -3) == 260 ||
		nearby_tile_house_class(-2, -3) == 260 
		) {
		1: return 1;
		return 0;
}

// Define protection to be limited to the time after era02
switch (FEAT_HOUSES, SELF, func_hist_ring, func_anim_frame() != 2) {
		0: return 0;
		func_hist_ring_2;
}



/*-----------------------------------------------------------------------------------------------------*/
/*------------------------------ FUNCTIONS FOR PROXIMITY CONDITIONS -----------------------------------*/
/*-----------------------------------------------------------------------------------------------------*/

// Switches for the construction check callback used to define preconditions for the respective house types' appearance
// Multiple conditions can be set for any house type; the combination switch is found in each house type's switches section 

// Check for the presence of a large station (3 tiles or larger) within a radius of three tiles
switch (FEAT_HOUSES, SELF, func_prox_large_station,
	    (
		(nearby_tile_class(-1, -1) == TILE_CLASS_STATION) +
		(nearby_tile_class(-1,  0) == TILE_CLASS_STATION) +
		(nearby_tile_class(-1,  1) == TILE_CLASS_STATION) +
		(nearby_tile_class( 0,  1) == TILE_CLASS_STATION) +
		(nearby_tile_class( 1,  1) == TILE_CLASS_STATION) +
		(nearby_tile_class( 1,  0) == TILE_CLASS_STATION) +
		(nearby_tile_class( 1, -1) == TILE_CLASS_STATION) +
		(nearby_tile_class( 0, -1) == TILE_CLASS_STATION) +
		(nearby_tile_class(-2, -2) == TILE_CLASS_STATION) +
		(nearby_tile_class(-2, -1) == TILE_CLASS_STATION) +
		(nearby_tile_class(-2,  0) == TILE_CLASS_STATION) +
		(nearby_tile_class(-2,  1) == TILE_CLASS_STATION) +
		(nearby_tile_class(-2,  2) == TILE_CLASS_STATION) +
		(nearby_tile_class(-1,  2) == TILE_CLASS_STATION) +
		(nearby_tile_class( 0,  2) == TILE_CLASS_STATION) +
		(nearby_tile_class( 1,  2) == TILE_CLASS_STATION) +
		(nearby_tile_class( 2,  2) == TILE_CLASS_STATION) +
		(nearby_tile_class( 2,  1) == TILE_CLASS_STATION) +
		(nearby_tile_class( 2,  0) == TILE_CLASS_STATION) +
		(nearby_tile_class( 2, -1) == TILE_CLASS_STATION) +
		(nearby_tile_class( 2, -2) == TILE_CLASS_STATION) +
		(nearby_tile_class( 1, -2) == TILE_CLASS_STATION) +
		(nearby_tile_class( 0, -2) == TILE_CLASS_STATION) +
		(nearby_tile_class(-1, -2) == TILE_CLASS_STATION) +
		(nearby_tile_class(-3, -3) == TILE_CLASS_STATION) +
		(nearby_tile_class(-3, -2) == TILE_CLASS_STATION) +
		(nearby_tile_class(-3, -1) == TILE_CLASS_STATION) +
		(nearby_tile_class(-3,  0) == TILE_CLASS_STATION) +
		(nearby_tile_class(-3,  1) == TILE_CLASS_STATION) +
		(nearby_tile_class(-3,  2) == TILE_CLASS_STATION) +
		(nearby_tile_class(-3,  3) == TILE_CLASS_STATION) +
		(nearby_tile_class(-2,  3) == TILE_CLASS_STATION) +
		(nearby_tile_class(-1,  3) == TILE_CLASS_STATION) +
		(nearby_tile_class( 0,  3) == TILE_CLASS_STATION) +
		(nearby_tile_class( 1,  3) == TILE_CLASS_STATION) +
		(nearby_tile_class( 2,  3) == TILE_CLASS_STATION) +
		(nearby_tile_class( 3,  3) == TILE_CLASS_STATION) +
		(nearby_tile_class( 3,  2) == TILE_CLASS_STATION) +
		(nearby_tile_class( 3,  1) == TILE_CLASS_STATION) +
		(nearby_tile_class( 3,  0) == TILE_CLASS_STATION) +
		(nearby_tile_class( 3, -1) == TILE_CLASS_STATION) +
		(nearby_tile_class( 3, -2) == TILE_CLASS_STATION) +
		(nearby_tile_class( 3, -3) == TILE_CLASS_STATION) +
		(nearby_tile_class( 2, -3) == TILE_CLASS_STATION) +
		(nearby_tile_class( 1, -3) == TILE_CLASS_STATION) +
		(nearby_tile_class( 0, -3) == TILE_CLASS_STATION) +
		(nearby_tile_class(-1, -3) == TILE_CLASS_STATION) +
		(nearby_tile_class(-2, -3) == TILE_CLASS_STATION)
		)) {
		0 .. 2: return 0;
		return 1;
}

// Check for the presence of a special building (building_class 3) within a radius of three tiles
switch (FEAT_HOUSES, SELF, func_prox_special_building,
		nearby_tile_house_class(-1, -1) == 259 ||
		nearby_tile_house_class(-1,  0) == 259 ||
		nearby_tile_house_class(-1,  1) == 259 ||
		nearby_tile_house_class( 0,  1) == 259 ||
		nearby_tile_house_class( 1,  1) == 259 ||
		nearby_tile_house_class( 1,  0) == 259 ||
		nearby_tile_house_class( 1, -1) == 259 ||
		nearby_tile_house_class( 0, -1) == 259 ||
		nearby_tile_house_class(-2, -2) == 259 ||
		nearby_tile_house_class(-2, -1) == 259 ||
		nearby_tile_house_class(-2,  0) == 259 ||
		nearby_tile_house_class(-2,  1) == 259 ||
		nearby_tile_house_class(-2,  2) == 259 ||
		nearby_tile_house_class(-1,  2) == 259 ||
		nearby_tile_house_class( 0,  2) == 259 ||
		nearby_tile_house_class( 1,  2) == 259 ||
		nearby_tile_house_class( 2,  2) == 259 ||
		nearby_tile_house_class( 2,  1) == 259 ||
		nearby_tile_house_class( 2,  0) == 259 ||
		nearby_tile_house_class( 2, -1) == 259 ||
		nearby_tile_house_class( 2, -2) == 259 ||
		nearby_tile_house_class( 1, -2) == 259 ||
		nearby_tile_house_class( 0, -2) == 259 ||
		nearby_tile_house_class(-1, -2) == 259 ||
		nearby_tile_house_class(-3, -3) == 259 ||
		nearby_tile_house_class(-3, -2) == 259 ||
		nearby_tile_house_class(-3, -1) == 259 ||
		nearby_tile_house_class(-3,  0) == 259 ||
		nearby_tile_house_class(-3,  1) == 259 ||
		nearby_tile_house_class(-3,  2) == 259 ||
		nearby_tile_house_class(-3,  3) == 259 ||
		nearby_tile_house_class(-2,  3) == 259 ||
		nearby_tile_house_class(-1,  3) == 259 ||
		nearby_tile_house_class( 0,  3) == 259 ||
		nearby_tile_house_class( 1,  3) == 259 ||
		nearby_tile_house_class( 2,  3) == 259 ||
		nearby_tile_house_class( 3,  3) == 259 ||
		nearby_tile_house_class( 3,  2) == 259 ||
		nearby_tile_house_class( 3,  1) == 259 ||
		nearby_tile_house_class( 3,  0) == 259 ||
		nearby_tile_house_class( 3, -1) == 259 ||
		nearby_tile_house_class( 3, -2) == 259 ||
		nearby_tile_house_class( 3, -3) == 259 ||
		nearby_tile_house_class( 2, -3) == 259 ||
		nearby_tile_house_class( 1, -3) == 259 ||
		nearby_tile_house_class( 0, -3) == 259 ||
		nearby_tile_house_class(-1, -3) == 259 ||
		nearby_tile_house_class(-2, -3) == 259 
		) {
		1: return 1;
		return 0;
}


