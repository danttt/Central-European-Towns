/*xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*/
/*x---------------------------------------------------------------------------------------------------x*/
/*x------------------------------------------- SMALL FARM --------------------------------------------x*/
/*x---------------------------------------------------------------------------------------------------x*/
/*xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*/



/* This 1x2/2x1 (road-dependent) house type uses sprites of house type farm house and farm fields sprites for the other tile */



/*-----------------------------------------------------------------------------------------------------*/
/*------------------------------- FUNCTIONS/RANDOM SWITCHES/SWITCHES ----------------------------------*/
/*-----------------------------------------------------------------------------------------------------*/

/* Switches for the construction check callback */
/* --------------------------------------------------------------------------------------------------- */

// Small farms have their house tile always where the road is
switch (FEAT_HOUSES, SELF, small_farm_nw_road, nearby_tile_class(-1, 0)) {
		TILE_CLASS_ROAD: return 1;
		return 0;
}
switch (FEAT_HOUSES, SELF, small_farm_ne_road, nearby_tile_class(0, -1)) {
		TILE_CLASS_ROAD: return 1;
		return 0;
}
switch (FEAT_HOUSES, SELF, small_farm_wn_road, nearby_tile_class(2, 0)) {
		TILE_CLASS_ROAD: return 1;
		return 0;
}
switch (FEAT_HOUSES, SELF, small_farm_en_road, nearby_tile_class(0, 2)) {
		TILE_CLASS_ROAD: return 1;
		return 0;
}



/* Switches defining what town types this house type can be built in */
/* --------------------------------------------------------------------------------------------------- */

switch (FEAT_HOUSES, SELF, small_farm_nw_town_type, func_town_type()) {
		1: small_farm_nw_road; 2: 0; 3: 0;
}
switch (FEAT_HOUSES, SELF, small_farm_ne_town_type, func_town_type()) {
		1: small_farm_ne_road; 2: 0; 3: 0;
}
switch (FEAT_HOUSES, SELF, small_farm_wn_town_type, func_town_type()) {
		1: small_farm_wn_road; 2: 0; 3: 0;
}
switch (FEAT_HOUSES, SELF, small_farm_en_town_type, func_town_type()) {
		1: small_farm_en_road; 2: 0; 3: 0;
}


/*-----------------------------------------------------------------------------------------------------*/
/*--------------------------------------- ITEM DEFINITIONS --------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------*/

item (FEAT_HOUSES, item_small_farm_nw, 10, HOUSE_SIZE_2X1) {
	property {
		substitute:					74;
		name:						string(STR_SMALLFARM);
		population:					12;
		mail_multiplier:			7;
		accepted_cargos:			[[PASS, 3], [MAIL, 1], [GOOD, 0]];
		local_authority_impact:		75;
		probability:				7;
		years_available:			[1700, 1949];
		minimum_lifetime:			5;
		availability_mask:			[ALL_TOWNZONES & ~bitmask(TOWNZONE_CENTRE), ALL_CLIMATES];
		removal_cost_multiplier:	75;
		building_class:				1;
		animation_info:				[ANIMATION_NON_LOOPING, 1];
	}
	graphics {
		graphics_north:				era_switch_farm_house;
		graphics_west:				random_farm_fields;
		anim_control:				era_anim_farm_house;
		construction_check:			small_farm_nw_town_type;
	}
}

item (FEAT_HOUSES, item_small_farm_ne, 12, HOUSE_SIZE_1X2) {
	property {
		substitute:					07;
		name:						string(STR_SMALLFARM);
		population:					12;
		mail_multiplier:			7;
		accepted_cargos:			[[PASS, 3], [MAIL, 1], [GOOD, 0]];
		local_authority_impact:		75;
		probability:				7;
		years_available:			[1700, 1949];
		minimum_lifetime:			5;
		availability_mask:			[ALL_TOWNZONES & ~bitmask(TOWNZONE_CENTRE), ALL_CLIMATES];
		removal_cost_multiplier:	75;
		building_class:				1;
		animation_info:				[ANIMATION_NON_LOOPING, 1];
	}
	graphics {
		graphics_north:				era_switch_farm_house;
		graphics_east:				random_farm_fields;
		anim_control:				era_anim_farm_house;
		construction_check:			small_farm_ne_town_type;
	}
}

item (FEAT_HOUSES, item_small_farm_wn, 14, HOUSE_SIZE_2X1) {
	property {
		substitute:					74;
		name:						string(STR_SMALLFARM);
		population:					12;
		mail_multiplier:			7;
		accepted_cargos:			[[PASS, 3], [MAIL, 1], [GOOD, 0]];
		local_authority_impact:		75;
		probability:				7;
		years_available:			[1700, 1949];
		minimum_lifetime:			5;
		availability_mask:			[ALL_TOWNZONES & ~bitmask(TOWNZONE_CENTRE), ALL_CLIMATES];
		removal_cost_multiplier:	75;
		building_class:				1;
		animation_info:				[ANIMATION_NON_LOOPING, 1];
	}
	graphics {
		graphics_north:				random_farm_fields;
		graphics_west:				era_switch_farm_house;
		anim_control:				era_anim_farm_house;
		construction_check:			small_farm_wn_town_type;
	}
}

item (FEAT_HOUSES, item_small_farm_en, 16, HOUSE_SIZE_1X2) {
	property {
		substitute:					07;
		name:						string(STR_SMALLFARM);
		population:					12;
		mail_multiplier:			7;
		accepted_cargos:			[[PASS, 3], [MAIL, 1], [GOOD, 0]];
		local_authority_impact:		75;
		probability:				7;
		years_available:			[1700, 1949];
		minimum_lifetime:			5;
		availability_mask:			[ALL_TOWNZONES & ~bitmask(TOWNZONE_CENTRE), ALL_CLIMATES];
		removal_cost_multiplier:	75;
		building_class:				1;
		animation_info:				[ANIMATION_NON_LOOPING, 1];
	}
	graphics {
		graphics_north:				random_farm_fields;
		graphics_east:				era_switch_farm_house;
		anim_control:				era_anim_farm_house;
		construction_check:			small_farm_en_town_type;
	}
}



